import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useEffect, useState } from 'react';
import { useRecoilValue } from 'recoil';

import { refetchProdsState } from '../../atoms/refetchProdsAtom';
import { AdminOrders } from '../../components/pages/account/AdminOrders';
import { CategoriesTabs } from '../../components/pages/account/CategoriesTabs';
import { Menu } from '../../components/pages/account/Menu';
import { ProductsTabs } from '../../components/pages/account/ProductsTabs';
import { UserMenu } from '../../components/pages/account/UserMenu';
import { UserOrders } from '../../components/pages/account/UserOrders';
import { Categories } from '../../components/shared/Categories';
import { Header } from '../../components/shared/Header';
import { Order } from '../../types/Order';
import { Product as ProdType } from '../../types/Product';
import { User } from '../../types/User';
import axiosProduction from '../api/axios';

const Account = ({
  prods,
  categories,
  sousCategories,
  orders,
}: {
  prods: ProdType[];
  categories: any;
  sousCategories: any;
  orders: Order[];
}) => {
  const [activeTab, setActiveTab] = useState(0);
  const [user, setUser] = useState<User>();
  const router = useRouter();
  const [products, setProducts] = useState(prods);
  const refetch = useRecoilValue(refetchProdsState);

  useEffect(() => {
    const getProds = async () => {
      await axiosProduction
        .get('/Product/getall')
        .then((r) => setProducts(r.data));
    };
    getProds();
  }, [refetch]);

  // Get user from ls , if not redirect to auth page
  useEffect(() => {
    const getUser = () => {
      const res = window.localStorage.getItem('user');
      if (res) {
        setUser(JSON.parse(res));
      }
      if (!res) {
        router.push('/auth');
      }
    };
    getUser();
  }, []);

  if (!user)
    return (
      <div className="flex h-[100vh] w-full items-center justify-center">
        <h1>Loading</h1>
      </div>
    );

  return (
    <>
      <Head>
        <title>My Account</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />
        <Categories />

        {user.isAdmin && (
          <div className="mx-auto my-20 mt-112 flex w-full max-w-[1400px] flex-col gap-[10px]">
            <h1 className="text-center text-display-md font-medium">
              My Account
            </h1>
            <div className="flex w-full gap-[40px]">
              <Menu setActiveTab={setActiveTab} activeTab={activeTab} />
              {activeTab === 0 && <ProductsTabs products={products} />}

              {activeTab === 1 && (
                <CategoriesTabs
                  categories={categories}
                  sousCategories={sousCategories}
                />
              )}
              {activeTab === 2 && <AdminOrders orders={orders} />}
            </div>
          </div>
        )}

        {!user.isAdmin && (
          <div className="mx-auto my-20 flex w-full max-w-[1400px] flex-col gap-[10px]">
            {/*  Add Prod Form */}
            <h1 className="text-center text-display-md font-medium">
              My Account
            </h1>
            <div className="flex w-full gap-[40px]">
              {/* Menu */}
              <UserMenu setActiveTab={setActiveTab} activeTab={activeTab} />
              {activeTab === 0 && (
                <UserOrders orders={orders} userEmail={user.email} />
              )}
            </div>
          </div>
        )}
      </main>
    </>
  );
};
Account.getInitialProps = async () => {
  try {
    const [ProdsRes, CatRes, SousCatRes, OrdersRes] = await Promise.all([
      axiosProduction.get('/Product/getall'),
      axiosProduction.get('/categorie/getall'),
      axiosProduction.get('/sousCat/getall'),
      axiosProduction.get('/order/getall'),
    ]);

    const prods = ProdsRes.data;
    const categories = CatRes.data;
    const sousCategories = SousCatRes.data;
    const orders = OrdersRes.data;

    return { prods, categories, sousCategories, orders };
  } catch (error) {
    console.error(error);
    return { prods: [], categories: [], sousCategories: [], orders: [] };
  }
};
export default Account;
