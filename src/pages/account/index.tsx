import * as Tabs from '@radix-ui/react-tabs';
import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import React, { useEffect, useState } from 'react';
import { BiChevronRight, BiEdit, BiTrash } from 'react-icons/bi';

import { Input } from '../../components/pages/account/Input';
import Edit from '../../components/pages/account/ManageProd/Edit/Edit';
import { Menu } from '../../components/pages/account/Menu';
import { ProductInputs } from '../../components/pages/account/ProductInputs';
import { Categories } from '../../components/shared/Categories';
import { Header } from '../../components/shared/Header';
import { Product } from '../../types/Product';

const Auth = () => {
  const [categorieName, setCategorieName] = useState('');
  const [sousCategorieName, setSousCategorieName] = useState('');
  const [activeTab, setActiveTab] = useState(0);
  const [categories, setCategories] = useState(null);
  const [sousCategories, setSousCategories] = useState(null);
  const [products, setProducts] = useState<Product[]>([]);

  const handleAddCategories = async () => {
    await axios
      .post('http://localhost:5000/categorie/add', {
        name: categorieName,
      })
      .then(() =>
        axios.post('http://localhost:5000/sousCat/add', {
          name: sousCategorieName,
          categorie: categorieName,
        })
      );
  };
  const fetchCategories = async () => {
    try {
      const response = await axios.get(
        'http://localhost:5000/categorie/getall'
      ); // replace with your API endpoint

      setCategories(response.data);
    } catch (error) {
      console.log(error);
    }
  };
  const fetchSouSCategories = async () => {
    try {
      const response = await axios.get('http://localhost:5000/sousCat/getall'); // replace with your API endpoint

      setSousCategories(response.data);
    } catch (error) {
      console.log(error);
    }
  };
  const fetchProducts = async () => {
    try {
      const response = await axios.get('http://localhost:5000/product/getall'); // replace with your API endpoint

      setProducts(response.data);
    } catch (error) {
      console.log(error);
    }
  };
  useEffect(() => {
    fetchProducts();
    fetchCategories();
    fetchSouSCategories();
  }, []);

  const deleteProd = async (id: string) => {
    await axios
      .delete(`http://localhost:5000/product/delete/${id}`)
      .then(() => {});
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />
        {/* Categories */}
        <Categories />
        <div className="max-w-[1400px]  text-text-sm gap-[10px] px-16 flex items-center mx-auto py-16">
          {/* Route */}
          <h1>Home</h1>
          <BiChevronRight className="w-[20px] h-[20px]" />
          <h1>My account</h1>
        </div>
        <div className="full my-20 flex flex-col gap-[10px] max-w-[1400px] mx-auto">
          {/*  Add Prod Form */}
          <h1 className="text-center text-display-md font-medium">
            My Account
          </h1>
          <div className="flex w-full gap-[40px]">
            {/* Menu */}
            <Menu setActiveTab={setActiveTab} activeTab={activeTab} />
            {activeTab === 0 && (
              //   Product Inputs

              <Tabs.Root className="TabsRoot" defaultValue="tab1">
                <Tabs.List
                  className="TabsList"
                  aria-label="Manage your account"
                >
                  <Tabs.Trigger className="TabsTrigger" value="tab1">
                    Add
                  </Tabs.Trigger>
                  <Tabs.Trigger className="TabsTrigger" value="tab2">
                    Manage
                  </Tabs.Trigger>
                </Tabs.List>
                <Tabs.Content value="tab1">
                  <div className="mt-8">
                    <ProductInputs />
                  </div>
                </Tabs.Content>
                <Tabs.Content value="tab2">
                  {products?.map((item) => (
                    <div className="flex gap-[10px] py-8 border-b-[1px] border-gray-500 items-center">
                      <Image
                        src={item.files[0]}
                        alt=""
                        width={75}
                        height={75}
                      />
                      <div>
                        <h1 className="text-blue-500 text-text-md font-medium">
                          {item.name}
                        </h1>
                        <p className="text-text-sm text-gray-400">
                          {item.categorie} - {item.sousCategorie}
                        </p>
                      </div>

                      <div className="flex items-center gap-[10px] ml-auto">
                        <BiTrash
                          className="w-[24px] h-[24px] fill-red-500"
                          // eslint-disable-next-line no-underscore-dangle
                          onClick={() => deleteProd(item._id)}
                        />
                        <Edit
                          price={item.price}
                          stock={item.countInStock}
                          name={item.name}
                          // eslint-disable-next-line no-underscore-dangle
                          id={item._id}
                          desc={item.description}
                        />
                      </div>
                    </div>
                  ))}
                </Tabs.Content>
              </Tabs.Root>
            )}

            {activeTab === 1 && (
              <Tabs.Root className="TabsRoot" defaultValue="tab1">
                <Tabs.List
                  className="TabsList"
                  aria-label="Manage your account"
                >
                  <Tabs.Trigger className="TabsTrigger" value="tab1">
                    Add
                  </Tabs.Trigger>
                  <Tabs.Trigger className="TabsTrigger" value="tab2">
                    Manage
                  </Tabs.Trigger>
                </Tabs.List>
                <Tabs.Content value="tab1">
                  <div className="mt-8">
                    <div className="w-full flex-col w-full">
                      <Input
                        label="Categorie"
                        value={categorieName}
                        type="text"
                        setValue={setCategorieName}
                        placeholder="Categorie Name..."
                      />
                      <Input
                        label="Sous Categorie"
                        value={sousCategorieName}
                        type="text"
                        setValue={setSousCategorieName}
                        placeholder="Sous Categorie Name..."
                      />

                      <button
                        type="button"
                        onClick={() => handleAddCategories()}
                      >
                        Add
                      </button>
                    </div>
                  </div>
                </Tabs.Content>
                <Tabs.Content value="tab2">
                  <div className="w-full flex  mt-8 justify-between">
                    <div className="w-full pr-40">
                      <h1 className="text-text-lg pb-14  font-medium">
                        Categories
                      </h1>
                      {/* eslint-disable-next-line @typescript-eslint/ban-ts-comment */}
                      {/* @ts-ignore */}
                      {categories.map((item) => (
                        <div className="flex border-b-[1px] border-gray-500 pb-8 items-center w-full justify-between">
                          <h1>{item.name}</h1>
                          <div className="flex items-center justify-end">
                            <BiEdit className="w-[24px] h-[24px] fill-blue-500" />
                            <BiTrash className="w-[24px] h-[24px] fill-red-500" />
                          </div>
                        </div>
                      ))}
                    </div>
                    <div className="w-full pr-40">
                      <h1 className="text-text-lg pb-14  font-medium">
                        Sous Categories
                      </h1>
                      {/* eslint-disable-next-line @typescript-eslint/ban-ts-comment */}
                      {/* @ts-ignore */}
                      {sousCategories.map((item) => (
                        <div className="flex  border-b-[1px] border-gray-500 pb-8 items-center w-full justify-between">
                          <h1>{item.name}</h1>
                          <div className="flex items-center justify-end">
                            <BiEdit className="w-[24px] h-[24px] fill-blue-500" />
                            <BiTrash className="w-[24px] h-[24px] fill-red-500" />
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </Tabs.Content>
              </Tabs.Root>
            )}
          </div>
        </div>
      </main>
    </>
  );
};
export default Auth;
