import * as Tabs from '@radix-ui/react-tabs';
import axios from 'axios';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useEffect, useState } from 'react';
import { BiChevronRight } from 'react-icons/bi';

import { AddCategories } from '../../components/pages/account/AddCategories';
import { ManageCategories } from '../../components/pages/account/ManageCategories';
import { Product } from '../../components/pages/account/ManageProd/Product';
import { Menu } from '../../components/pages/account/Menu';
import { ProductInputs } from '../../components/pages/account/ProductInputs';
import { Categories } from '../../components/shared/Categories';
import { Header } from '../../components/shared/Header';
import { Product as ProdType } from '../../types/Product';

const Account = ({
  prods,
  categories,
  sousCategories,
}: {
  prods: ProdType[];
  categories: any;
  sousCategories: any;
}) => {
  const [activeTab, setActiveTab] = useState(0);
  const [user, setUser] = useState();
  const router = useRouter();

  useEffect(() => {
    const getUser = () => {
      const res = window.localStorage.getItem('user');
      if (res) {
        setUser(JSON.parse(res));
      }
      if (!res) {
        router.push('/auth');
      }
    };
    getUser();
  }, []);

  if (!user) return <h1>Loading</h1>;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />
        {/* Categories */}
        <Categories />
        <div className="max-w-[1400px] mt-112  text-text-sm gap-[10px] px-16 flex items-center mx-auto py-16">
          {/* Route */}
          <h1>Home</h1>
          <BiChevronRight className="w-[20px] h-[20px]" />
          <h1>My account</h1>
        </div>
        <div className="full my-20 flex flex-col gap-[10px] max-w-[1400px] mx-auto">
          {/*  Add Prod Form */}
          <h1 className="text-center text-display-md font-medium">
            My Account
          </h1>
          <div className="flex w-full gap-[40px]">
            {/* Menu */}
            <Menu setActiveTab={setActiveTab} activeTab={activeTab} />
            {activeTab === 0 && (
              //   Product Inputs

              <Tabs.Root className="TabsRoot" defaultValue="tab1">
                <Tabs.List
                  className="TabsList"
                  aria-label="Manage your account"
                >
                  <Tabs.Trigger className="TabsTrigger" value="tab1">
                    Add
                  </Tabs.Trigger>
                  <Tabs.Trigger className="TabsTrigger" value="tab2">
                    Manage
                  </Tabs.Trigger>
                </Tabs.List>
                <Tabs.Content value="tab1">
                  <div className="mt-8">
                    <ProductInputs />
                  </div>
                </Tabs.Content>
                <Tabs.Content value="tab2">
                  {prods?.map((item) => (
                    <Product item={item} />
                  ))}
                </Tabs.Content>
              </Tabs.Root>
            )}

            {activeTab === 1 && (
              <Tabs.Root className="TabsRoot" defaultValue="tab1">
                <Tabs.List
                  className="TabsList"
                  aria-label="Manage your account"
                >
                  <Tabs.Trigger className="TabsTrigger" value="tab1">
                    Add
                  </Tabs.Trigger>
                  <Tabs.Trigger className="TabsTrigger" value="tab2">
                    Manage
                  </Tabs.Trigger>
                </Tabs.List>
                <Tabs.Content value="tab1">
                  <AddCategories />
                </Tabs.Content>
                <Tabs.Content value="tab2">
                  {/* Manage Categories */}
                  <ManageCategories
                    categories={categories}
                    sousCategories={sousCategories}
                  />
                </Tabs.Content>
              </Tabs.Root>
            )}
          </div>
        </div>
      </main>
    </>
  );
};
Account.getInitialProps = async () => {
  const ProdsRes = await axios
    .get('http://localhost:5000/Product/getall')
    .catch((error) => {
      console.error(error);
    });

  const prods = await ProdsRes?.data;

  const CatRes = await axios
    .get('http://localhost:5000/categorie/getall')
    .catch((error) => {
      console.error(error);
    });

  const categories = await CatRes?.data;

  const SousCatRes = await axios
    .get('http://localhost:5000/sousCat/getall')
    .catch((error) => {
      console.error(error);
    });

  const sousCategories = await SousCatRes?.data;

  return { prods, categories, sousCategories };
};
export default Account;
